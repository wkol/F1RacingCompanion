[versions]
agp = "7.1.2"
kotlin = "1.6.10"
coroutines = "1.6.0"
androidxhilt = "1.0.0"
dagger = "2.41"
hilt = "2.41"
androidxlifecycle = "2.4.1"
compose = "1.1.1"
junit = "5.7.0"
retrofit = "2.9.0"
moshi = "1.13.0"
moshi_lazy = "2.2"
scarlet = "0.2.4"
okhttp_logger = "4.9.2"
mockwebserver = "0.1.8"

navigation = "2.4.2"



[libraries]
android-gradlePluginClasspath = { module = "com.android.tools.build:gradle", version.ref = "agp"}
android-desugar = { module = "com.android.tools:desugar_jdk_libs", version = "1.1.5" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.4.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.4.1" }
androidx-core = { module = "androidx.core:core-ktx", version = "1.7.0" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version = "2.1.0" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxlifecycle" }
androidx-test-runner = { module = "androidx.test:runner", version = "1.4.0" }
androidx-test-rules = { module = "androidx.test:rules", version = "1.4.0" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version = "1.1.3" }

androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxlifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxlifecycle" }


compose-material-iconsext = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" } # Material design icons (extended)
compose-material-material = { module = "androidx.compose.material:material", version.ref = "compose" } # Material Design
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" } # Tooling support (Previews, etc.)

compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
google-material = { module = "com.google.android.material:material", version = "1.5.0" } # https://github.com/material-components/material-components-android/releases

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

google-hilt-gradlePluginClasspath = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
google-hilt-library = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
google-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
google-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

junit-bom = { module = "org.junit:junit-bom", version = "5.8.2" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-gradlePluginClasspath = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-lazy = { module = "com.serjltt.moshi:moshi-lazy-adapters", version.ref = "moshi_lazy"}

okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version = "4.9.3" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp_logger" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp_logger" }
okhttp-mockwebserver-extension = { module = "com.github.fabric8io:mockwebserver", version.ref = "mockwebserver"}

scarlet = { module = "com.github.tinder.scarlet:scarlet", version.ref = "scarlet" }
scarlet-lifecycle-android = { module = "com.github.tinder.scarlet:scarlet-lifecycle-android", version.ref = "scarlet" }
scarlet-protocol-websocket = { module = "com.github.tinder.scarlet:scarlet-protocol-websocket-okhttp", version.ref = "scarlet" }
scarlet-message-adapter-moshi = { module = "com.github.tinder.scarlet:scarlet-message-adapter-moshi", version.ref = "scarlet" }
